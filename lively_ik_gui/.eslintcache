[{"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/index.js":"1","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/App.js":"2","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/serviceWorker.js":"3","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Connection.js":"4","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/ConfigCreator.js":"5","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Scene.js":"6","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Collision.js":"7","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Uploader.js":"8","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Main.js":"9","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Basics.js":"10","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Behavior.js":"11","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/SimpleTFClient.js":"12","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Detail.js":"13","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/JointSpec.js":"14","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/Default.js":"15","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/ObjectiveSpec.js":"16","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/Englishify.js":"17","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/ModeSpec.js":"18","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/LogSlider.js":"19","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/Categories.js":"20","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/GoalSpec.js":"21","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/Geometry.js":"22","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/DualSlider.js":"23","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/TranslationInput.js":"24","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/RotationInput.js":"25","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/ScalarInput.js":"26","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/SimpleUrdf.js":"27"},{"size":503,"mtime":1610411495390,"results":"28","hashOfConfig":"29"},{"size":8328,"mtime":1616634793656,"results":"30","hashOfConfig":"29"},{"size":5086,"mtime":1598475880574,"results":"31","hashOfConfig":"29"},{"size":1116,"mtime":1607876457510,"results":"32","hashOfConfig":"29"},{"size":6007,"mtime":1615314538717,"results":"33","hashOfConfig":"29"},{"size":3310,"mtime":1616167105515,"results":"34","hashOfConfig":"29"},{"size":5634,"mtime":1616550493219,"results":"35","hashOfConfig":"29"},{"size":1713,"mtime":1614292084119,"results":"36","hashOfConfig":"29"},{"size":1076,"mtime":1616692451774,"results":"37","hashOfConfig":"29"},{"size":8784,"mtime":1616550236811,"results":"38","hashOfConfig":"29"},{"size":14762,"mtime":1616682439254,"results":"39","hashOfConfig":"29"},{"size":2052,"mtime":1616363510782,"results":"40","hashOfConfig":"29"},{"size":9704,"mtime":1616600319338,"results":"41","hashOfConfig":"29"},{"size":5008,"mtime":1616605732257,"results":"42","hashOfConfig":"29"},{"size":5736,"mtime":1616429929034,"results":"43","hashOfConfig":"29"},{"size":10353,"mtime":1616699560068,"results":"44","hashOfConfig":"29"},{"size":8701,"mtime":1616429975656,"results":"45","hashOfConfig":"29"},{"size":5382,"mtime":1616630516151,"results":"46","hashOfConfig":"29"},{"size":1176,"mtime":1612990815817,"results":"47","hashOfConfig":"29"},{"size":1462,"mtime":1616430020250,"results":"48","hashOfConfig":"29"},{"size":6956,"mtime":1616683494222,"results":"49","hashOfConfig":"29"},{"size":7582,"mtime":1615582101397,"results":"50","hashOfConfig":"29"},{"size":1816,"mtime":1615317760954,"results":"51","hashOfConfig":"29"},{"size":3694,"mtime":1615494853683,"results":"52","hashOfConfig":"29"},{"size":3354,"mtime":1615585079655,"results":"53","hashOfConfig":"29"},{"size":1716,"mtime":1616364197149,"results":"54","hashOfConfig":"29"},{"size":4059,"mtime":1616167335277,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"e2pqvp",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/index.js",[],["116","117"],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/App.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/serviceWorker.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Connection.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/ConfigCreator.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Scene.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Collision.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Uploader.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Main.js",["118"],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Basics.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Behavior.js",["119","120","121"],"import React from 'react';\nimport { Tabs, List, Space, Tooltip, Button, Dropdown, Menu } from 'antd';\nimport { EditOutlined, CopyOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { defaultObjectives, defaultGoals, defaultWeights, defaultObjectiveNames } from '../../util/Default';\nimport { getObjectivePreview } from '../../util/Englishify';\nimport { BEHAVIOR_ATTRIBUTE_GROUPS,\n         BEHAVIOR_ATTRIBUTE_GROUP_NAMES,\n         BASE_OBJECTIVES,\n         DIRECTION_OBJECTIVES,\n         LIVELINESS_OBJECTIVES,\n         PAIRED_OBJECTIVES,\n         JOINT_OBJECTIVES,\n         CARTESIAN_OBJECTIVES } from '../../util/Categories';\nconst { TabPane } = Tabs;\n\n\nclass Behavior extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {objectiveTab:'Base',overallTab:'attributes'};\n  }\n\n  getUnusedModeName = () => {\n    let name = 'New Mode'\n    let nameIdx = 0;\n    let existingNames = this.props.config.modes.map(mode=>mode.name);\n    while (existingNames.indexOf(name) >= 0) {\n      nameIdx += 1;\n      name = `New Mode (${nameIdx})`\n    }\n    return name;\n  }\n\n  getUnusedGoalName = () => {\n    let name = 'New Goal'\n    let nameIdx = 0;\n    let existingNames = this.props.config.goals.map(goal=>goal.name);\n    while (existingNames.indexOf(name) >= 0) {\n      nameIdx += 1;\n      name = `New Goal (${nameIdx})`\n    }\n    return name;\n  }\n\n  getColor = (idx,selectionType) => {\n    if (this.props.meta.selected === null || selectionType !== this.props.meta.selected.type) {\n      return 'white'\n    } else if (idx === this.props.meta.selected.idx) {\n      return '#E9E9E9'\n    }\n  }\n\n  setObjectiveTab = (key) => {\n    this.setState({objectiveTab:key})\n  }\n\n  setOverallTab = (key) => {\n    this.setState({overallTab:key})\n  }\n\n  getEENameByIdx = (idx) => {\n    return this.props.config.ee_fixed_joints[idx]\n  }\n\n  getJointNameByIdx = (idx) => {\n    return this.props.config.joint_ordering[idx]\n  }\n\n  createObjective = (variant) => {\n    let objectives = [...this.props.config.objectives];\n    let modes = [...this.props.config.modes];\n    let goals = [...this.props.config.goals];\n\n    let objective = {...defaultObjectives[variant]};\n    let weight = defaultWeights[variant];\n    let values = {...defaultGoals[variant]};\n\n    console.log(variant);\n    console.log(objective);\n    console.log(weight);\n    console.log(values)\n\n    const isJointObjective = (JOINT_OBJECTIVES.indexOf(variant) >= 0);\n    const isCartesianObjective = (CARTESIAN_OBJECTIVES.indexOf(variant) >= 0);\n    const isPairedObjective = (PAIRED_OBJECTIVES.indexOf(variant) >= 0);\n\n    if (isPairedObjective && isCartesianObjective && this.props.config.joint_names.length > 1) {\n      objective.indices = [0, this.props.config.joint_names[0].length, 1, this.props.config.joint_names[1].length]\n    } else if (isPairedObjective && isCartesianObjective) {\n      objective.indices = [0, this.props.config.joint_names[0].length, 0, this.props.config.joint_names[0].length-1]\n    } else if (isCartesianObjective) {\n      objective.indices = [0, this.props.config.joint_names[0].length]\n    } else if (isJointObjective && isPairedObjective) {\n      objective.indices = [this.props.config.joint_ordering.length-1,this.props.config.joint_ordering.length-2]\n    } else if (isJointObjective) {\n      objective.indices = [this.props.config.joint_ordering.length-1]\n    }\n\n    if (variant === 'position_match') {\n      let position = this.props.meta.joint_poses[objective.indices[0]][objective.indices[1]]['position']\n      values.vector = [position.x,position.y,position.z];\n    } else if (variant === 'orientation_match') {\n      let quaternion = this.props.meta.joint_poses[objective.indices[0]][objective.indices[1]]['quaternion']\n      values.quaternion = [quaternion.w,quaternion.x,quaternion.y,quaternion.z];\n    } else if (variant === 'joint_match') {\n      values.scalar = this.props.config.starting_config[1][objective.indices[0]]\n    } else if (variant === 'position_boundng') {\n      let position = this.props.meta.joint_poses[objective.indices[0]][objective.indices[1]]['position']\n      values.pose = [[position.x,position.y,position.z],[1,0,0,0]]\n    }\n\n    objectives.push(objective)\n    modes.forEach((mode)=>{\n      mode.weights.push(weight)\n    })\n    goals.forEach((goal)=>{\n      goal.values.push(values)\n    })\n\n    console.log(objective);\n    console.log(weight);\n    console.log(values);\n\n    this.props.onUpdate({objectives:objectives,modes:modes,goals:goals},{selected:{idx:objectives.length-1,type:'objective'}})\n\n  }\n\n  deleteObjective = (idx) => {\n    let objectives = [...this.props.config.objectives];\n    let modes = [...this.props.config.modes];\n    let goals = [...this.props.config.goals];\n    objectives.splice(idx,1);\n    modes.forEach((goalMode)=>{\n      goalMode.weights.splice(idx,1);\n    })\n    goals.forEach((goalSpec)=>{\n      goalSpec.values.splice(idx,1);\n    })\n    this.props.onUpdate({objectives:objectives,modes:modes,goals:goals},{selected:null})\n  }\n\n  selectObjective = (idx) => {\n    this.props.onUpdate({},{selected:{idx:idx,type:'objective'}})\n  }\n\n  copyObjective = (idx) => {\n    let objectives = [...this.props.config.objectives];\n    let modes = [...this.props.config.modes];\n    let goals = [...this.props.config.goals];\n    let copiedObjective = objectives[idx];\n    objectives.splice(idx+1,0,copiedObjective)\n    modes.forEach((mode)=>{\n      let copiedWeight = mode.weights[idx];\n      mode.weights.splice(idx+1,0,copiedWeight)\n    })\n    goals.forEach((goal)=>{\n      let copiedValue = goal.values[idx];\n      goals.values.splice(idx+1,0,copiedValue)\n    })\n    this.props.onUpdate({objectives:objectives,modes:modes,goals:goals},{selected:{idx:idx+1,type:'objective'}})\n  }\n\n  addMode = () => {\n    let modes = [...this.props.config.modes];\n    let newModeWeights = this.props.config.objectives.map(objective=>defaultWeights[objective.variant]);\n    let mode = {name:this.getUnusedModeName(),weights:newModeWeights};\n    modes.push(mode)\n    this.props.onUpdate({modes:modes},{selected:{idx:modes.length-1,type:'mode'}})\n  }\n\n  addGoal = () => {\n    let goals = [...this.props.config.goals];\n    let newGoalValues = this.props.config.objectives.map(objective=>{\n      switch(objective.variant) {\n        case 'position_match':\n          let pos = this.props.meta.joint_poses[objective.indices[0]][objective.indices[1]].position;\n          return {vector:[pos.x,pos.y,pos.z]}\n        case 'orientation_match':\n          let ori = this.props.meta.joint_poses[objective.indices[0]][objective.indices[1]].quaternion;\n          return {quaternion:[ori.w,ori.x,ori.y,ori.z]}\n        case 'joint_match':\n          let jointValue = this.props.meta.displayed_state[objective.indices[0]]\n          return {scalar:jointValue}\n        default:\n          return {}\n      }\n    });\n    let goal = {name:this.getUnusedGoalName(),values:newGoalValues};\n    console.log(goal);\n    goals.push(goal)\n    this.props.onUpdate({goals:goals},{selected:{idx:goals.length-1,type:'goal'}})\n  }\n\n  copyMode = (idx) => {\n    let modes = [...this.props.config.modes];\n    let copiedMode = JSON.parse(JSON.stringify(modes[idx]));\n    if (copiedMode.name === 'default') {\n      copiedMode.name = 'Copy of \"Default\"'\n    } else {\n      copiedMode.name = 'Copy of \"'+copiedMode.name+'\"'\n    }\n    modes.splice(idx+1,0,copiedMode)\n    this.props.onUpdate({modes:modes},{selected:{idx:idx+1,type:'mode'}})\n  }\n\n  copyGoal = (idx) => {\n    let goals = [...this.props.config.goals];\n    let copiedGoal = JSON.parse(JSON.stringify(goals[idx]));\n    if (copiedGoal.name === 'default') {\n      copiedGoal.name = 'Copy of \"Default\"'\n    } else {\n      copiedGoal.name = 'Copy of \"'+copiedGoal.name+'\"'\n    }\n    goals.splice(idx+1,0,copiedGoal)\n    this.props.onUpdate({goals:goals},{selected:{idx:idx+1,type:'goal'}})\n  }\n\n  selectMode = (idx) => {\n    this.props.onUpdate({},{selected:{idx:idx,type:'mode'}})\n  }\n\n  selectGoal = (idx) => {\n    this.props.onUpdate({},{selected:{idx:idx,type:'goal'}})\n  }\n\n  deleteMode = (idx) => {\n    let modes = [...this.props.config.modes];\n    modes.splice(idx,1);\n    this.props.onUpdate({modes:modes},{selected:null})\n  }\n\n  deleteGoal = (idx) => {\n    let goals = [...this.props.config.goals];\n    goals.splice(idx,1);\n    this.props.onUpdate({goals:goals},{selected:null})\n  }\n\n  getObjectiveListItem = (idx) => {\n    const objectiveData = this.props.config.objectives[idx];\n    const fixedFrame = this.props.config.fixed_frame;\n    const eeFixedJoints = this.props.config.ee_fixed_joints;\n    const jointOrdering = this.props.config.joint_ordering;\n    const jointNames = this.props.config.joint_names;\n    return (\n      <List.Item style={{backgroundColor:this.getColor(idx,'objective')}} extra={\n          <Space style={{width: 120}}>\n            <Tooltip title='Edit'>\n              <Button shape=\"circle\" style={{marginLeft:5}} icon={<EditOutlined/>} onClick={()=>this.selectObjective(idx)}/>\n            </Tooltip>\n            <Tooltip title='Copy'>\n              <Button shape=\"circle\" style={{marginLeft:5}} icon={<CopyOutlined/>} onClick={()=>this.copyObjective(idx)}/>\n            </Tooltip>\n            <Tooltip title='Delete' color='#ff4d4f'>\n              <Button shape=\"circle\" style={{marginLeft:5}} icon={<DeleteOutlined/>} danger onClick={()=>this.deleteObjective(idx)}/>\n            </Tooltip>\n          </Space>\n        }>\n        <List.Item.Meta title={this.props.config.objectives[idx].tag}\n                        description={getObjectivePreview(objectiveData,\n                                                         fixedFrame,\n                                                         eeFixedJoints,\n                                                         jointOrdering,\n                                                         jointNames)}/>\n      </List.Item>\n    )\n  }\n\n  getModeListItem = (idx) => {\n    return (\n      <List.Item style={{backgroundColor:this.getColor(idx,'mode')}} extra={\n        <Space style={{width: 120}}>\n          <Tooltip title='Edit'>\n            <Button shape=\"circle\" style={{marginLeft:5}} icon={<EditOutlined/>} onClick={()=>this.selectMode(idx)}/>\n          </Tooltip>\n          <Tooltip title='Copy'>\n            <Button shape=\"circle\" style={{marginLeft:5}} icon={<CopyOutlined/>} onClick={()=>this.copyMode(idx)}/>\n          </Tooltip>\n          <Tooltip title={this.props.config.modes[idx].name === 'default' ? 'Cannot be deleted' : 'Delete' }\n                   color={this.props.config.modes[idx].name === 'default' ? null : '#ff4d4f'}>\n            <Button shape=\"circle\" style={{marginLeft:5}} icon={<DeleteOutlined/>} danger onClick={()=>this.deleteMode(idx)}\n                    disabled={this.props.config.modes[idx].name === 'default'}/>\n          </Tooltip>\n        </Space>\n      }>\n      <List.Item.Meta title={this.props.config.modes[idx].name === 'default' ? 'Default' : this.props.config.modes[idx].name}/>\n    </List.Item>\n    )\n  }\n\n  getGoalListItem = (idx) => {\n    return (\n      <List.Item style={{backgroundColor:this.getColor(idx,'goal')}} extra={\n        <Space style={{width: 120}}>\n          <Tooltip title='Edit'>\n            <Button shape=\"circle\" style={{marginLeft:5}} icon={<EditOutlined/>} onClick={()=>this.selectGoal(idx)}/>\n          </Tooltip>\n          <Tooltip title='Copy'>\n            <Button shape=\"circle\" style={{marginLeft:5}} icon={<CopyOutlined/>} onClick={()=>this.copyGoal(idx)}/>\n          </Tooltip>\n          <Tooltip title={this.props.config.goals[idx].name === 'default' ? 'Cannot be deleted' : 'Delete' }\n                   color={this.props.config.goals[idx].name === 'default' ? null : '#ff4d4f'}>\n            <Button shape=\"circle\" style={{marginLeft:5}} icon={<DeleteOutlined/>} danger onClick={()=>this.deleteGoal(idx)}\n                    disabled={this.props.config.goals[idx].name === 'default'}/>\n          </Tooltip>\n        </Space>\n      }>\n      <List.Item.Meta title={this.props.config.goals[idx].name === 'default' ? 'Default' : this.props.config.goals[idx].name}/>\n    </List.Item>\n    )\n  }\n\n  render() {\n    return (\n      <Tabs activeKey={this.state.overallTab}\n            style={{height: '100%', width:'100%' }}\n            onChange={(key)=>this.setOverallTab(key)}\n            centered>\n        <TabPane tab='Attributes' style={{height: '100%', width:'100%' }} key='attributes'>\n          <Tabs activeKey={this.state.objectiveTab}\n                style={{height: '100%', width:'100%' }}\n                onChange={(key)=>this.setObjectiveTab(key)}\n                tabPosition='left'>\n            {BEHAVIOR_ATTRIBUTE_GROUPS.map((group,groupIdx)=>(\n              <TabPane tab={BEHAVIOR_ATTRIBUTE_GROUP_NAMES[groupIdx]}\n                       key={BEHAVIOR_ATTRIBUTE_GROUP_NAMES[groupIdx]}\n                       style={{ height: '100%', width:'100%' }}>\n                <List header={null}\n                      footer={\n                        <Dropdown trigger='click' overlay={\n                          <Menu onClick={(e)=>this.createObjective(e.key)}>\n                            {group.map((variant)=><Menu.Item key={variant}>{defaultObjectiveNames[variant]}</Menu.Item>)}\n                          </Menu>\n                        } placement=\"topLeft\">\n                          <Button>Add {BEHAVIOR_ATTRIBUTE_GROUP_NAMES[groupIdx]} Attribute</Button>\n                        </Dropdown>\n                      }\n                      bordered\n                      style={{ maxHeight: '100%', width:'100%', overflow:'scroll'}}\n                      dataSource={this.props.config.objectives.map((objective,idx)=>idx).filter((idx)=>group.indexOf(this.props.config.objectives[idx].variant)>=0)}\n                      renderItem={this.getObjectiveListItem}\n                />\n              </TabPane>\n            ))}\n          </Tabs>\n        </TabPane>\n        <TabPane tab='Modes' style={{height: '100%', width:'100%' }} key='modes'>\n          <List header={null} footer={<Button type=\"primary\" onClick={this.addMode}>Add Mode</Button>} bordered\n                style={{ maxHeight: '100%', width:'100%', overflow:'scroll'}}\n                dataSource={this.props.config.modes.map((mode,idx)=>idx)}\n                renderItem={this.getModeListItem}\n          />\n        </TabPane>\n        <TabPane tab='Goals' style={{height: '100%', width:'100%' }} key='goals'>\n          <List header={null} footer={<Button type=\"primary\" onClick={this.addGoal}>Add Goal</Button>} bordered\n                style={{ maxHeight: '100%', width:'100%', overflow:'scroll'}}\n                dataSource={this.props.config.goals.map((goal,idx)=>idx)}\n                renderItem={this.getGoalListItem}\n          />\n        </TabPane>\n      </Tabs>\n\n    )\n  }\n\n}\n\nexport default Behavior\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/SimpleTFClient.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Detail.js",[],["122","123"],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/JointSpec.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/Default.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/ObjectiveSpec.js",["124","125","126","127","128","129","130","131","132","133","134","135","136"],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/Englishify.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/ModeSpec.js",["137","138","139"],"import React, { useState } from 'react';\nimport _ from 'lodash';\nimport { List, Input, Alert, Drawer, Space, Button, Tabs } from 'antd';\nimport TranslationInput from '../../util/TranslationInput';\nimport RotationInput from '../../util/RotationInput';\nimport ScalarInput from '../../util/ScalarInput';\nimport LogSlider from '../../util/LogSlider';\nimport { BEHAVIOR_ATTRIBUTE_GROUPS,\n         BEHAVIOR_ATTRIBUTE_GROUP_NAMES } from '../../util/Categories';\nconst { TabPane } = Tabs;\n\nconst debounce = (func, timeout = 200) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => { func.apply(this, args); }, timeout);\n  };\n}\n\nexport default function ModeSpec(props) {\n\n  let visible = props.meta.selected && props.meta.selected.type === 'mode';\n  let onFile = visible ? props.config.modes[props.meta.selected.idx] : {name:'null',weights:[]}\n  let modeNames = props.config.modes.map(mode=>mode.name);\n  let isDefault = props.meta.selected && props.meta.selected.idx === 0;\n\n  const [cachedMode, setCachedMode] = useState(onFile);\n  const [activeTab, setActiveTab] = useState('Base');\n\n  let validName = true;\n  if (cachedMode.name !== onFile.name && modeNames.indexOf(cachedMode.name) >= 0) {\n    validName = false\n  } else if (!isDefault && cachedMode.name !== undefined && cachedMode.name.toLowerCase() === 'default') {\n    validName = false\n  } else if (cachedMode.name === '') {\n    validName = false\n  }\n\n  let matches = _.isEqual(cachedMode, onFile);\n\n  return (\n    <Drawer\n      afterVisibleChange={(visible)=>{\n        let onFile = visible ? props.config.modes[props.meta.selected.idx] : {name:'null',weights:[]}\n        setCachedMode(onFile)\n      }}\n      title={\n        <Space align=\"start\">\n          <h3>{isDefault ? \"Specify Default Mode\" : \"Specify Mode - \"+cachedMode.name}</h3>\n          {!matches &&\n            <Button size=\"small\" type=\"primary\" onClick={()=>{\n              let modes = [...props.config.modes];\n              modes[props.meta.selected.idx] = cachedMode;\n              props.onUpdate({directive:'update',config:{modes:modes}})\n            }}>\n              Save\n            </Button>}\n          {!matches &&\n            <Button size=\"small\" danger type=\"ghost\" onClick={()=>{\n              props.onUpdate({directive:'update',meta:{selected:null}})\n              setCachedMode(onFile)\n            }}>\n              Discard\n            </Button>\n          }\n        </Space>\n      }\n      placement=\"right\"\n      closable={matches}\n      maskClosable={matches}\n      width='50%'\n      onClose={()=>props.onUpdate({directive:'update',meta:{selected:null}})}\n      visible={visible}\n      getContainer={false}\n      style={{ position: 'absolute' }}\n    >\n      {visible && (\n        <>\n        {!isDefault &&\n          <>\n          <h3>Name</h3>\n          <Input placeholder='Name this Mode'\n               value={cachedMode.name}\n               onChange={(e)=>{\n                 let editedCache = {...cachedMode};\n                 editedCache.name = e.target.value\n                 setCachedMode(editedCache)\n               }}/>\n          </>\n          }\n        {!validName && (\n          <Alert\n             message=\"Name Error\"\n             description=\"Please select a unique name for this mode.\"\n             type=\"error\"\n             showIcon\n           />\n         )}\n        <h3 style={{marginTop:10}}>Behavior Importance</h3>\n        <Tabs activeKey={activeTab}\n              centered\n              style={{height: '100%', width:'100%' }}\n              onChange={(key)=>setActiveTab(key)}>\n          {BEHAVIOR_ATTRIBUTE_GROUPS.map((group,groupIdx)=>(\n            <TabPane tab={BEHAVIOR_ATTRIBUTE_GROUP_NAMES[groupIdx]} key={BEHAVIOR_ATTRIBUTE_GROUP_NAMES[groupIdx]} style={{ height: '100%', width:'100%' }}>\n              <List header={null}\n                    footer={null}\n                    bordered\n                    dataSource={props.config.objectives.map((obj,idx)=>idx).filter((idx)=>BEHAVIOR_ATTRIBUTE_GROUPS[groupIdx].indexOf(props.config.objectives[idx].variant)>=0)}\n                    renderItem={(idx)=>(\n                      <List.Item key={idx} label={props.config.objectives[idx].tag}>\n                        <List.Item.Meta title={props.config.objectives[idx].tag}\n                                        description={<LogSlider\n                                                        min={0} max={100}\n                                                        step={0.01}\n                                                        showInput={true}\n                                                        value={cachedMode.weights[idx]}\n                                                        onChange={(v)=>{\n                                                          let editedCache = {...cachedMode};\n                                                          editedCache.weights[idx] = v;\n                                                          debounce(props.onUpdate({directive:'update',meta:{target_weights:editedCache.weights}}));\n                                                          setCachedMode(editedCache);\n                                                        }}/>}\n                        />\n                      </List.Item>\n                    )}\n              />\n            </TabPane>\n          ))}\n        </Tabs>\n      </>\n      )}\n    </Drawer>\n  )\n\n}\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/LogSlider.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/Categories.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/GoalSpec.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/Geometry.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/DualSlider.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/TranslationInput.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/RotationInput.js",["140","141","142","143"],"import React, { useState } from 'react';\nimport { Button, Space, Popover, InputNumber } from 'antd';\nimport {RedoOutlined, UndoOutlined, EditOutlined, ArrowLeftOutlined, ArrowRightOutlined, ArrowUpOutlined, ArrowDownOutlined} from '@ant-design/icons';\nimport {eulerFromQuaternion, quaternionFromEuler} from './Geometry';\n\nfunction RotationInput(props) {\n\n  const [popoverVisible, setPopoverVisible] = useState(false);\n\n  const eulerValues = eulerFromQuaternion(props.value);\n\n  return (\n      <Space wrap={true} align='center'>\n\n        <Button shape=\"circle\" onClick={()=>props.onChange(quaternionFromEuler([eulerValues[0]+props.step,eulerValues[1],eulerValues[2]]))} icon={<UndoOutlined style={{color:'red'}}/>} />\n        <Button shape=\"circle\" onClick={()=>props.onChange(quaternionFromEuler([eulerValues[0]-props.step,eulerValues[1],eulerValues[2]]))} icon={<RedoOutlined style={{color:'red'}}/>} />\n        <Button shape=\"circle\" onClick={()=>props.onChange(quaternionFromEuler([eulerValues[0],eulerValues[1]-props.step,eulerValues[2]]))} icon={<UndoOutlined style={{color:'lime'}}/>} />\n        <Button shape=\"circle\" onClick={()=>props.onChange(quaternionFromEuler([eulerValues[0],eulerValues[1]+props.step,eulerValues[2]]))} icon={<RedoOutlined style={{color:'lime'}}/>} />\n        <Button shape=\"circle\" onClick={()=>props.onChange(quaternionFromEuler([eulerValues[0],eulerValues[1],eulerValues[2]-props.step]))} icon={<UndoOutlined style={{color:'blue'}}/>} />\n        <Button shape=\"circle\" onClick={()=>props.onChange(quaternionFromEuler([eulerValues[0],eulerValues[1],eulerValues[2]+props.step]))} icon={<RedoOutlined style={{color:'blue'}}/>} />\n\n\n        {props.showInput ?\n          <Popover\n            placement='left'\n            content={\n              <Space>\n                <h4 style={{color:'red'}}>R</h4>\n                <InputNumber\n                  min={0}\n                  max={2*Math.pi}\n                  step={props.step}\n                  style={{ margin: '0 16px' }}\n                  value={eulerValues[0]}\n                  onChange={(v)=>props.onChange(quaternionFromEuler([v,eulerValues[1],eulerValues[2]]))}\n                />\n                <h4 style={{color:'lime'}}>P</h4>\n                <InputNumber\n                  min={0}\n                  max={2*Math.pi}\n                  step={props.step}\n                  style={{ margin: '0 16px' }}\n                  value={eulerValues[1]}\n                  onChange={(v)=>props.onChange(quaternionFromEuler([eulerValues[0],v,eulerValues[2]]))}\n                />\n                <h4 style={{color:'blue'}}>Y</h4>\n                <InputNumber\n                  min={0}\n                  max={2*Math.pi}\n                  step={props.step}\n                  style={{ margin: '0 16px' }}\n                  value={eulerValues[2]}\n                  onChange={(v)=>props.onChange(quaternionFromEuler([eulerValues[0],eulerValues[1],v]))}\n                />\n              </Space>\n            }\n            title=\"Set Rotation\"\n            trigger=\"click\"\n            visible={popoverVisible}\n            onVisibleChange={setPopoverVisible}\n            >\n            <Button shape='circle' type=\"primary\" icon={<EditOutlined/>} onClick={()=>setPopoverVisible(!popoverVisible)}/>\n          </Popover>\n          : null}\n      </Space>\n  )\n}\n\nexport default RotationInput;\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/ScalarInput.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/SimpleUrdf.js",["144"],"import * as ROSLIB from 'roslib';\nimport * as ROS3D from 'ros3d';\nimport * as THREE from 'three-full';\n\nclass SimpleUrdf extends THREE.Object3D {\n  constructor(options) {\n    options = options || {};\n    super(options);\n    this.urdfModel = options.urdfModel;\n    this.path = options.path || '/';\n    this.tfClient = options.tfClient;\n    this.tfPrefix = options.tfPrefix || '';\n    this.loader = options.loader;\n\n    this.__proto__ = THREE.Object3D.prototype;\n\n    // load all models\n    var links = this.urdfModel.links;\n    for ( var l in links) {\n      var link = links[l];\n      for( var i=0; i<link.visuals.length; i++ ) {\n        var visual = link.visuals[i];\n        if (visual && visual.geometry) {\n          // Save frameID\n          var frameID = this.tfPrefix + '/' + link.name;\n          // Save color material\n          var colorMaterial = null;\n          if (visual.material && visual.material.color) {\n            var color = visual.material && visual.material.color;\n            colorMaterial = ROS3D.makeColorMaterial(color.r, color.g, color.b, color.a);\n          }\n          if (visual.geometry.type === ROSLIB.URDF_MESH) {\n            var uri = visual.geometry.filename;\n            // strips package://\n            var tmpIndex = uri.indexOf('package://');\n            if (tmpIndex !== -1) {\n              uri = uri.substr(tmpIndex + ('package://').length);\n            }\n            var fileType = uri.substr(-3).toLowerCase();\n\n            if (ROS3D.MeshLoader.loaders[fileType]) {\n              // create the model\n              var mesh = new ROS3D.MeshResource({\n                path : this.path,\n                resource : uri,\n                loader : this.loader,\n                material : colorMaterial\n              });\n\n              // check for a scale\n              if(link.visuals[i].geometry.scale) {\n                mesh.scale.copy(visual.geometry.scale);\n              }\n\n              // create a scene node with the model\n              var sceneNode = new ROS3D.SceneNode({\n                frameID : frameID,\n                  pose : visual.origin,\n                  tfClient : this.tfClient,\n                  object : mesh\n              });\n              sceneNode.name = visual.name\n              this.add(sceneNode);\n            } else {\n              console.warn('Could not load geometry mesh: '+uri);\n            }\n          } else {\n            var shapeMesh = this.createShapeMesh(visual, options);\n            // Create a scene node with the shape\n            var scene = new ROS3D.SceneNode({\n              frameID: frameID,\n                pose: visual.origin,\n                tfClient: this.tfClient,\n                object: shapeMesh\n            });\n            scene.name = visual.name\n            this.add(scene);\n          }\n        }\n      }\n    }\n\n  }\n\n  createShapeMesh = (visual,options) => {\n    var colorMaterial = null;\n    if (!colorMaterial) {\n      colorMaterial = ROS3D.makeColorMaterial(0, 0, 0, 1);\n    }\n    var shapeMesh;\n    // Create a shape\n    switch (visual.geometry.type) {\n      case ROSLIB.URDF_BOX:\n        var dimension = visual.geometry.dimension;\n        var cube = new THREE.BoxGeometry(dimension.x, dimension.y, dimension.z);\n        shapeMesh = new THREE.Mesh(cube, colorMaterial);\n        break;\n      case ROSLIB.URDF_CYLINDER:\n        var radius = visual.geometry.radius;\n        var length = visual.geometry.length;\n        var cylinder = new THREE.CylinderGeometry(radius, radius, length, 16, 1, false);\n        shapeMesh = new THREE.Mesh(cylinder, colorMaterial);\n        shapeMesh.quaternion.setFromAxisAngle(new THREE.Vector3(1, 0, 0), Math.PI * 0.5);\n        break;\n      case ROSLIB.URDF_SPHERE:\n        var sphere = new THREE.SphereGeometry(visual.geometry.radius, 16);\n        shapeMesh = new THREE.Mesh(sphere, colorMaterial);\n        break;\n    }\n\n    return shapeMesh;\n  }\n\n  unsubscribeTf = () => {\n    this.children.forEach(function(n) {\n      if (typeof n.unsubscribeTf === 'function') { n.unsubscribeTf(); }\n    });\n  }\n}\n\nexport default SimpleUrdf;\n",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"153","line":8,"column":10,"nodeType":"151","messageId":"152","endLine":8,"endColumn":25},{"ruleId":"149","severity":1,"message":"154","line":9,"column":10,"nodeType":"151","messageId":"152","endLine":9,"endColumn":30},{"ruleId":"149","severity":1,"message":"155","line":10,"column":10,"nodeType":"151","messageId":"152","endLine":10,"endColumn":31},{"ruleId":"145","replacedBy":"156"},{"ruleId":"147","replacedBy":"157"},{"ruleId":"149","severity":1,"message":"158","line":3,"column":16,"nodeType":"151","messageId":"152","endLine":3,"endColumn":22},{"ruleId":"149","severity":1,"message":"159","line":3,"column":39,"nodeType":"151","messageId":"152","endLine":3,"endColumn":50},{"ruleId":"149","severity":1,"message":"160","line":4,"column":15,"nodeType":"151","messageId":"152","endLine":4,"endColumn":18},{"ruleId":"149","severity":1,"message":"161","line":4,"column":45,"nodeType":"151","messageId":"152","endLine":4,"endColumn":50},{"ruleId":"149","severity":1,"message":"162","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":27},{"ruleId":"149","severity":1,"message":"163","line":5,"column":29,"nodeType":"151","messageId":"152","endLine":5,"endColumn":43},{"ruleId":"149","severity":1,"message":"164","line":5,"column":45,"nodeType":"151","messageId":"152","endLine":5,"endColumn":66},{"ruleId":"149","severity":1,"message":"165","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":17},{"ruleId":"149","severity":1,"message":"153","line":9,"column":10,"nodeType":"151","messageId":"152","endLine":9,"endColumn":25},{"ruleId":"149","severity":1,"message":"154","line":10,"column":10,"nodeType":"151","messageId":"152","endLine":10,"endColumn":30},{"ruleId":"149","severity":1,"message":"155","line":11,"column":10,"nodeType":"151","messageId":"152","endLine":11,"endColumn":31},{"ruleId":"149","severity":1,"message":"166","line":15,"column":9,"nodeType":"151","messageId":"152","endLine":15,"endColumn":15},{"ruleId":"149","severity":1,"message":"167","line":17,"column":7,"nodeType":"151","messageId":"152","endLine":17,"endColumn":15},{"ruleId":"149","severity":1,"message":"168","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":24},{"ruleId":"149","severity":1,"message":"169","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":21},{"ruleId":"149","severity":1,"message":"170","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":19},{"ruleId":"149","severity":1,"message":"171","line":3,"column":51,"nodeType":"151","messageId":"152","endLine":3,"endColumn":68},{"ruleId":"149","severity":1,"message":"172","line":3,"column":70,"nodeType":"151","messageId":"152","endLine":3,"endColumn":88},{"ruleId":"149","severity":1,"message":"173","line":3,"column":90,"nodeType":"151","messageId":"152","endLine":3,"endColumn":105},{"ruleId":"149","severity":1,"message":"174","line":3,"column":107,"nodeType":"151","messageId":"152","endLine":3,"endColumn":124},{"ruleId":"175","severity":1,"message":"176","line":92,"column":5,"nodeType":"177","messageId":"178","endLine":109,"endColumn":6},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'BASE_OBJECTIVES' is defined but never used.","'DIRECTION_OBJECTIVES' is defined but never used.","'LIVELINESS_OBJECTIVES' is defined but never used.",["179"],["180"],"'Slider' is defined but never used.","'InputNumber' is defined but never used.","'Col' is defined but never used.","'Radio' is defined but never used.","'defaultObjectives' is defined but never used.","'defaultWeights' is defined but never used.","'defaultObjectiveNames' is defined but never used.","'LogSlider' is defined but never used.","'Option' is assigned a value but never used.","'debounce' is assigned a value but never used.","'TranslationInput' is defined but never used.","'RotationInput' is defined but never used.","'ScalarInput' is defined but never used.","'ArrowLeftOutlined' is defined but never used.","'ArrowRightOutlined' is defined but never used.","'ArrowUpOutlined' is defined but never used.","'ArrowDownOutlined' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]