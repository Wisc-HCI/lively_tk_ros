[{"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/index.js":"1","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/App.js":"2","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/serviceWorker.js":"3","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Connection.js":"4","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/ConfigCreator.js":"5","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Commander.js":"6","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Scene.js":"7","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Initial.js":"8","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Joints.js":"9","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Objectives.js":"10","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Misc.js":"11","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Objects.js":"12","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Collision.js":"13","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Preprocessing.js":"14","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Uploader.js":"15","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Main.js":"16","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Basics.js":"17","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Behavior.js":"18","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/SimpleTFClient.js":"19","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Detail.js":"20","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/JointSpec.js":"21","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/Default.js":"22"},{"size":503,"mtime":1610411495390,"results":"23","hashOfConfig":"24"},{"size":4699,"mtime":1612474214171,"results":"25","hashOfConfig":"24"},{"size":5086,"mtime":1598475880574,"results":"26","hashOfConfig":"24"},{"size":1116,"mtime":1607876457510,"results":"27","hashOfConfig":"24"},{"size":5758,"mtime":1612461751335,"results":"28","hashOfConfig":"24"},{"size":278,"mtime":1610653765965,"results":"29","hashOfConfig":"24"},{"size":2809,"mtime":1612472264043,"results":"30","hashOfConfig":"24"},{"size":1728,"mtime":1599064167038,"results":"31","hashOfConfig":"24"},{"size":3068,"mtime":1599436214278,"results":"32","hashOfConfig":"24"},{"size":10934,"mtime":1600803391517,"results":"33","hashOfConfig":"24"},{"size":1448,"mtime":1599778802664,"results":"34","hashOfConfig":"24"},{"size":22174,"mtime":1599778557060,"results":"35","hashOfConfig":"24"},{"size":4019,"mtime":1612474814656,"results":"36","hashOfConfig":"24"},{"size":1837,"mtime":1599860973945,"results":"37","hashOfConfig":"24"},{"size":2511,"mtime":1611588790575,"results":"38","hashOfConfig":"24"},{"size":907,"mtime":1612462522887,"results":"39","hashOfConfig":"24"},{"size":7780,"mtime":1612475361178,"results":"40","hashOfConfig":"24"},{"size":10344,"mtime":1612116595626,"results":"41","hashOfConfig":"24"},{"size":1730,"mtime":1611887155252,"results":"42","hashOfConfig":"24"},{"size":2520,"mtime":1612199434445,"results":"43","hashOfConfig":"24"},{"size":1699,"mtime":1612458566242,"results":"44","hashOfConfig":"24"},{"size":1062,"mtime":1612472640134,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"he0m22",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/index.js",[],["98","99"],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/App.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/serviceWorker.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Connection.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/ConfigCreator.js",["100","101"],"import React from 'react';\nimport { Steps, Divider, Button } from 'antd';\nimport Basics from './config/Basics';\nimport Collision from './config/Collision';\nimport Behavior from './config/Behavior';\nconst { Step } = Steps;\n\nclass ConfigCreator extends React.Component {\n\n  state = {step:0};\n\n  updateUrdf = (event) => {\n    console.log(event.target.value);\n    this.props.onUpdate({directive:'update',config:{urdf:event.target.value}})\n  }\n\n  updateFixedFrame = (fixedFrame) => {\n    this.props.onUpdate({directive:'update',config:{fixed_frame:fixedFrame}})\n  }\n\n  updateJointNames = (jointNames) => {\n    this.props.onUpdate({directive:'update',config:{joint_names:jointNames}})\n  }\n\n  updateEeFixedJoints = (eeFixedJoints) => {\n    this.props.onUpdate({directive:'update',config:{ee_fixed_joints:eeFixedJoints}})\n  }\n\n  updateJointOrdering = (jointOrdering) => {\n    this.props.onUpdate({directive:'update',config:{joint_ordering:jointOrdering}})\n  }\n\n  updateStates = (states) => {\n    this.props.onUpdate({directive:'update',config:{states:states}})\n  }\n\n  updateStartingConfig = (startingConfig) => {\n    this.props.onUpdate({directive:'update',config:{starting_config:startingConfig}})\n  }\n\n  updateRobotLinkRadius = (radius) => {\n    this.props.onUpdate({directive:'update',config:{robot_link_radius:radius}})\n  }\n\n  updateStaticEnvironment = (staticEnvironment) => {\n    this.props.onUpdate({directive:'update',config:{static_environment:staticEnvironment}})\n  }\n\n  beginPreprocess = () => {\n    //this.props.socket.emit('app_process',{action:'preprocess'})\n  }\n\n  updateObjectives = (objectives) => {\n    this.props.onUpdate({directive:'update',config:{objectives:objectives}})\n  }\n\n  updateGoals = (goals) => {\n    this.props.onUpdate({directive:'update',config:{goals:goals}})\n  }\n\n  updateControlMode = (mode) => {\n    this.props.onUpdate({directive:'update',config:{mode_control:mode}})\n  }\n\n  updateEnvironmentMode = (mode) => {\n    this.props.onUpdate({directive:'update',config:{mode_environment:mode}})\n  }\n\n  updateBaseLinkMotionBounds = (bounds) => {\n    this.props.onUpdate({directive:'update',config:{base_link_motion_bounds:bounds}})\n  }\n\n  updateDisplayedState = (displayedState) => {\n    this.props.onUpdate({directive:'update',meta:{displayed_state:displayedState}})\n  }\n\n  updateToManual = () => {\n    this.props.onUpdate({directive:'update',meta:{control:'manual'}})\n  }\n\n  updateToSolve = () => {\n    this.props.onUpdate({directive:'update',meta:{control:'solve'}})\n  }\n\n  updateMeta = (meta) => {\n    this.props.onUpdate({directive:'update',meta:meta})\n  }\n\n  canStep = (desired) => {\n    switch (desired) {\n      case 0:\n        return (this.props.meta.valid_urdf && this.props.meta.valid_robot)\n      case 1:\n        return this.props.meta.valid_robot;\n      case 2:\n        return (this.props.meta.valid_config && this.props.meta.valid_solver)\n      default:\n        return false\n    }\n  }\n\n  setStep = (step) => {\n    if (step === 2) {\n      this.updateToSolve()\n    } else {\n      this.updateToManual()\n    }\n    this.setState({step:step})\n  }\n\n  stepForward = () => {\n    if (this.state.step+1 === 2) {\n      this.updateToSolve()\n    } else {\n      this.updateToManual()\n    }\n    this.setState((state)=>({step:state.step+1}))\n  }\n\n  stepBackward = () => {\n    if (this.state.step-1 === 2) {\n      this.updateToSolve()\n    } else {\n      this.updateToManual()\n    }\n    this.setState((state)=>({step:state.step-1}))\n  }\n\n  getPage = () => {\n    switch (this.state.step) {\n      case 0:\n        return (\n          <Basics meta={this.props.meta}\n                  config={this.props.config}\n                  updateUrdf={(e)=>this.updateUrdf(e)}\n                  updateFixedFrame={(e)=>this.updateFixedFrame(e)}\n                  updateJointNames={(e)=>this.updateJointNames(e)}\n                  updateJointOrdering={(e)=>this.updateJointOrdering(e)}\n                  updateEeFixedJoints={(e)=>this.updateEeFixedJoints(e)}\n                  updateControlMode={(e)=>this.updateControlMode(e)}\n                  updateEnvironmentMode={(e)=>this.updateEnvironmentMode(e)}\n                  updateMeta={(e)=>this.updateMeta(e)}\n                  style={{height:'100%'}}\n                  />\n        );\n      case 1:\n        return (\n          <Collision meta={this.props.meta}\n                     config={this.props.config}\n                     updateStates={(e)=>this.updateStates(e)}\n                     updateStaticEnvironment={(e)=>this.updateStaticEnvironment(e)}\n                     updateRobotLinkRadius={(e)=>this.updateRobotLinkRadius(e)}\n                     updateMeta={(e)=>this.updateMeta(e)}\n                     style={{height:'100%'}}\n                  />\n        );\n      case 2:\n        return (\n          <Behavior meta={this.props.meta}\n                    config={this.props.config}\n                    updateObjectives={(e)=>this.updateObjectives(e)}\n                    updateGoals={(e)=>this.updateGoals(e)}\n                    style={{height:'100%'}}\n                  />\n        );\n      default:\n        return;\n    }\n  }\n\n  render() {\n    return (\n      <div style={{margin:10,height:'100%'}}>\n        <Steps current={this.state.step} size=\"large\" type='navigation' onChange={(step)=>this.setStep(step)}>\n          <Step title=\"Basics\" description=\"Specify basic robot configuration\" disabled={!this.canStep(0)}/>\n          <Step title=\"Collision\" description=\"Specify how the robot may collide\" disabled={!this.canStep(1)}/>\n          <Step title=\"Behavior\" description=\"Specify how the robot behaves\" disabled={!this.canStep(2)}/>\n        </Steps>\n        <div style={{margin:20,height:'100%'}}>\n          {this.getPage()}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default ConfigCreator\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Commander.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Scene.js",["102"],"import React, { Component } from 'react';\nimport * as ROS3D from 'ros3d';\nimport * as ROSLIB from 'roslib';\nimport * as THREE from 'three-full';\nimport SimpleTFClient from '../util/SimpleTFClient';\n\n// import sizeMe from 'react-sizeme';\nimport { withResizeDetector } from 'react-resize-detector';\n\nclass Scene extends Component {\n\n  render() {\n    return (\n      <div style={{backgroundColor:'#303030',color:'white',height:'100%',width:'100%'}} id=\"scene\"/>\n    );\n  }\n\n\n   componentDidUpdate(prevProps) {\n    const { width, height, fixedFrame, urdf, connected } = this.props;\n\n    if (width !== prevProps.width || height !== prevProps.height) {\n      this.viewer.resize(width,height)\n    }\n    if (fixedFrame !== prevProps.fixedFrame || urdf !== prevProps.urdf) {\n      this.setupViewer(this.props.urdf,this.props.fixedFrame)\n    }\n\n  }\n\n  componentWillUnmount() {\n    console.log('UNMOUNTING AND CLEARING SCENE')\n    if (this.viewer) {\n      while(this.viewer.scene.children.length > 0){\n        this.viewer.scene.remove(this.viewer.scene.children[0]);\n      }\n    }\n    this.viewer = null;\n    document.getElementById('scene').innerHTML = \"\";\n  }\n\n  setupViewer(urdf,fixedFrame) {\n    if (this.viewer) {\n      while(this.viewer.scene.children.length > 0){\n        this.viewer.scene.remove(this.viewer.scene.children[0]);\n      }\n    }\n    this.viewer = null;\n    document.getElementById('scene').innerHTML = \"\";\n    // Create the main viewer.\n    this.viewer = new ROS3D.Viewer({\n      divID: 'scene',\n      width: this.props.width,\n      height: this.props.height,\n      antialias: true,\n      background: '#303030',\n      intensity: .65\n    });\n    // this.handleResize();\n    this.viewer.addObject(new ROS3D.Grid({\n           color: '#0181c4',\n           cellSize: 0.5,\n           num_cells: 20,\n           lineWidth: 2\n    }));\n    // Brighten up the scene\n    this.viewer.addObject(new THREE.AmbientLight(0x404040))\n    // Setup a client to listen to TFs.\n    this.tfClient = new SimpleTFClient(this.props.ros);\n    // Setup the marker client.\n    this.markerClient = new ROS3D.MarkerClient({\n      ros: this.props.ros,\n      tfClient: this.tfClient,\n      topic: '/visualization_marker',\n      rootObject: this.viewer.scene\n    });\n    this.robotModel = new ROSLIB.UrdfModel({\n      string:this.props.urdf.replace(/package:\\/\\//g, process.env.PUBLIC_URL + 'assets/')\n    });\n    // console.log(this.robotModel);\n    this.robot = new ROS3D.Urdf({\n      urdfModel: this.robotModel,\n      path: '/',\n      tfClient: this.tfClient,\n      tfPrefix: '',\n      loader: THREE.ColladaLoader\n    })\n    // console.log(this.robot);\n    this.viewer.scene.add(this.robot);\n  }\n\n   componentDidMount() {\n     this.setupViewer(this.props.urdf,this.props.fixedFrame)\n  }\n}\n\nexport default withResizeDetector(Scene);\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Initial.js",[],["103","104"],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Joints.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Objectives.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Misc.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Objects.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Collision.js",["105","106"],"import React from 'react';\nimport { Form, Slider, Tabs, Checkbox, InputNumber, List, Space, Tag, Button, Tooltip } from 'antd';\nimport { EditOutlined, CopyOutlined, DeleteOutlined } from '@ant-design/icons';\nconst { TabPane } = Tabs;\n\nclass Collision extends React.Component {\n\n  deleteState = (idx) => {\n    let states = [...this.props.config.states];\n    states.splice(idx,1)\n    this.props.updateStates(states)\n  }\n\n  addState = () => {\n    let joints = [...this.props.meta.displayed_state];\n    let states = [...this.props.config.states];\n    states.push(joints);\n    this.props.updateStates(states)\n  }\n\n  selectState = (idx) => {\n    this.props.updateMeta({selected:{idx:idx,type:'collision_state'},displayed_state:this.props.config.states[idx],control:'manual'})\n  }\n\n  copyState = (idx) => {\n    let states = [...this.props.config.states];\n    let copied = [...states[idx]]\n    states.splice(idx+1,0,copied);\n    this.props.updateStates(states)\n    this.props.updateMeta({selected:{idx:idx+1,type:'collision_state'},displayed_state:copied,control:'manual'})\n  }\n\n  getColor = (idx) => {\n    if (this.props.meta.selected === null) {\n      return 'white'\n    } else if (idx === this.props.meta.selected.idx) {\n      return '#E9E9E9'\n    }\n  }\n\n  render() {\n    return (\n      <Tabs defaultActiveKey='1' tabPosition='left' style={{ height: '100%', width:'100%' }}>\n        <TabPane tab='Link Collision' key=\"1\">\n          <h3>Robot Link Radius</h3>\n          <Space style={{display:'flex',paddingBottom:10}}>\n            <InputNumber min={0} max={10} defaultValue={0.05} step={0.01} onChange={(value)=>this.props.updateRobotLinkRadius(value)} />\n            <Checkbox>Show Link Collision</Checkbox>\n          </Space>\n        </TabPane>\n        <TabPane tab='Environment' key='2'>\n          <h3>Spheres</h3>\n          <List header={null} footer={null} bordered dataSource={this.props.config.static_environment.spheres} style={{marginBottom:10}}\n                renderItem={(item)=>(\n                  <List.Item>{item.name}</List.Item>\n                )}\n          />\n          <h3>Cuboids</h3>\n          <List header={null} footer={null} bordered dataSource={this.props.config.static_environment.cuboids}\n                renderItem={(item)=>(\n                  <List.Item>{item.name}</List.Item>\n                )}\n          />\n        </TabPane>\n        <TabPane tab='Training States' key='3'>\n          <List header={null} footer={<Button type=\"primary\" onClick={this.addState}>Add State</Button>}\n                bordered dataSource={this.props.config.states.map((state,idx)=>idx)}\n                style={{width:'100%'}}\n                renderItem={(state,idx)=>(\n                  <List.Item style={{width:'100%',backgroundColor:this.getColor(idx)}} extra={\n                      <Space style={{width: 120}}>\n                        <Tooltip title='Edit'>\n                          <Button shape=\"circle\" style={{marginLeft:5}} icon={<EditOutlined/>} onClick={()=>this.selectState(idx)}/>\n                        </Tooltip>\n                        <Tooltip title='Copy'>\n                          <Button shape=\"circle\" style={{marginLeft:5}} icon={<CopyOutlined/>} onClick={()=>this.copyState(idx)}/>\n                        </Tooltip>\n                        <Tooltip title='Delete' color='#ff4d4f'>\n                          <Button shape=\"circle\" style={{marginLeft:5}} icon={<DeleteOutlined/>} danger onClick={()=>this.deleteState(idx)}/>\n                        </Tooltip>\n                      </Space>\n                    }>\n                    <div style={{width:'100%'}}>\n                      {this.props.config.states[idx].map((value,i)=>(\n                        <Tag key={this.props.config.joint_ordering[i]} style={{margin: 1}}>\n                          {value.toFixed(2)}\n                        </Tag>\n                      ))}\n                    </div>\n\n                  </List.Item>\n                )}\n          />\n        </TabPane>\n      </Tabs>\n    )\n  }\n\n}\n\nexport default Collision\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Preprocessing.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Uploader.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Main.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Basics.js",["107"],"import React from 'react';\nimport { Input, Select, Modal, Tabs, Button, Badge, Alert, Space, Tag, Card, List, Tooltip } from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nconst { TabPane } = Tabs;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nclass Basics extends React.Component {\n\n  state = {urdfWindowVisible:false,};\n\n  openUrdfWindow = () => {\n    this.setState({urdfWindowVisible:true})\n  }\n\n  closeUrdfWindow = () => {\n    this.setState({urdfWindowVisible:false})\n  }\n\n  updateEE = (joint, idx) => {\n    let newJoints = [...this.props.config.ee_fixed_joints];\n    newJoints[idx] = joint;\n    this.props.updateEeFixedJoints(newJoints);\n  }\n\n  changeChain = (chain, idx) => {\n    let jointNames = this.props.config.joint_names;\n    jointNames[idx] = chain\n    this.props.updateJointNames(jointNames)\n  }\n\n  addChain = () => {\n    this.props.updateJointNames([...this.props.config.joint_names,[]]);\n  }\n\n  removeChain = (idx) => {\n    let jointNames = [...this.props.config.joint_names];\n    jointNames.splice(idx,1);\n    this.props.updateJointNames(jointNames)\n  }\n\n  getOptions = (joints) => {\n    return joints.map((joint) => {\n      return (<Option key={joint}>{joint}</Option>)\n    })\n  }\n\n  tagRender = (props) => {\n    const { label, value, closable, onClose } = props;\n\n    let color = '#BE33FF';\n    let tooltip = 'This joint is not used as part of a chain, but can still be controlled';\n    this.props.config.joint_names.forEach((chain)=>{\n      chain.forEach(joint=>{\n        if (joint === label) {\n          color = '#1890ff'\n          tooltip = 'This joint is part of a chain';\n        }\n      })\n    })\n\n    return (\n      <Tooltip title={tooltip} style={{ marginRight: 3 }} color={color}>\n        <Tag color={color} closable={closable} onClose={onClose}>\n          {label}\n        </Tag>\n      </Tooltip>\n      );\n  }\n\n  selectState = () => {\n    this.props.updateMeta({selected:{idx:null,type:'starting_config'},displayed_state:this.props.config.starting_config})\n  }\n\n  render() {\n    return (\n      <>\n        <Tabs defaultActiveKey='1' tabPosition='left' style={{ height: '100%', width:'100%' }}>\n          <TabPane tab=\"URDF\" key=\"1\">\n            <h3>URDF</h3>\n            <Space style={{display:'flex',paddingBottom:10}}>\n              <Button onClick={this.openUrdfWindow} size='large'>Update</Button>\n              {this.props.meta.valid_urdf ? (\n                <Alert message=\"Valid\" type=\"success\" showIcon />\n              ) : (\n                <Alert message=\"Invalid\" type=\"error\" showIcon />\n              )}\n            </Space>\n            <h3>Fixed Frame</h3>\n            <Select\n              placeholder=\"Please select a fixed frame\"\n              value={this.props.config.fixed_frame}\n              onChange={(joint)=>this.props.updateFixedFrame(joint)}\n              style={{ width:'100%'}}>\n              {this.props.meta.links.map((joint)=>{\n                return <Option key={joint}>{joint}</Option>\n              })}\n            </Select>\n          </TabPane>\n          <TabPane tab=\"Modes\" key=\"2\">\n            <Space style={{display:'flex'}}>\n              <div>\n                <h3>Control</h3>\n                <Select\n                  placeholder=\"Please select a control mode\"\n                  value={this.props.config.mode_control}\n                  onChange={(mode)=>this.props.updateControlMode(mode)}\n                  style={{ width:'100%'}}>\n                    <Option key='absolute'>Absolute</Option>\n                    <Option key='relative'>Relative</Option>\n                </Select>\n              </div>\n              <div>\n                <h3>Environment</h3>\n                <Select\n                  placeholder=\"Please select an environment mode\"\n                  value={this.props.config.mode_environment}\n                  onChange={(mode)=>this.props.updateEnvironmentMode(mode)}\n                  style={{ width:'100%'}}>\n                    <Option key='ECA'>ECA</Option>\n                    <Option key='ECA3'>ECA3</Option>\n                    <Option key='ECAA'>ECAA</Option>\n                    <Option key='None'>None</Option>\n                </Select>\n              </div>\n            </Space>\n          </TabPane>\n          <TabPane tab=\"Active Joints\" key=\"3\" style={{height:'100%'}}>\n            <Select\n                mode=\"multiple\"\n                placeholder=\"Please select\"\n                tagRender={this.tagRender}\n                defaultValue={this.props.config.joint_ordering}\n                onChange={(joints)=>this.props.updateJointOrdering(joints)}\n                style={{ width:'100%',marginBottom:10}}\n                >\n                {this.getOptions(this.props.meta.dynamic_joints)}\n            </Select>\n          </TabPane>\n          <TabPane tab=\"Chains\" key=\"4\" style={{height:'100%'}}>\n            <List bordered header={null} style={{marginBottom:10}} footer={<Button type='primary' onClick={this.addChain}>Add Chain</Button>}\n                  dataSource={this.props.config.joint_names.map((item,idx)=>idx)}\n                  renderItem={(idx)=>{\n                    return (\n                      <List.Item extra={\n                        <><Select\n                          showSearch\n                          style={{ marginLeft:10,maxWidth: 250}}\n                          defaultValue={this.props.config.ee_fixed_joints[idx]}\n                          placeholder=\"EE Fixed Joint\"\n                          optionFilterProp=\"children\"\n                          onChange={(e)=>this.updateEE(e,idx)}\n                          >\n                          {this.getOptions(this.props.meta.fixed_joints)}\n                        </Select>\n                        <Button style={{ marginLeft:10}} shape=\"circle\" icon={<DeleteOutlined/>} danger onClick={()=>this.removeChain(idx)}/></>\n                      }>\n                        <Select\n                          key={idx}\n                          mode=\"multiple\"\n                          placeholder=\"Please select\"\n                          defaultValue={this.props.config.joint_names[idx]}\n                          onChange={(e)=>this.changeChain(e,idx)}\n                          style={{ width:'100%', flex:1}}\n                          >\n                          {this.getOptions(this.props.config.joint_ordering)}\n                        </Select>\n                      </List.Item>)\n                  }}/>\n          </TabPane>\n          <TabPane tab=\"Initial\" key=\"5\" style={{height:'100%'}}>\n            <Card title=\"Initial States\" extra={\n              <Tooltip title='Edit'>\n                <Button shape=\"circle\" style={{marginLeft:5}} icon={<EditOutlined/>} onClick={this.selectState}/>\n              </Tooltip>\n            }>\n                {this.props.config.starting_config.map((value)=><Tag>{value.toFixed(2)}</Tag>)}\n            </Card>\n          </TabPane>\n        </Tabs>\n        <Modal title=\"Specify URDF\"\n            footer={null}\n            closable={this.props.meta.valid_urdf}\n            visible={this.state.urdfWindowVisible}\n            onCancel={this.closeUrdfWindow}\n            maskClosable={false}\n          >\n          {this.props.meta.valid_urdf ? (\n              <Badge.Ribbon style={{backgroundColor: '#52c41a'}} text='Valid'>\n                <TextArea value={this.props.config.urdf} defaultValue={this.props.config.urdf} rows={10} onChange={this.props.updateUrdf}/>\n              </Badge.Ribbon>\n            ) : (\n              <Badge.Ribbon color='red' text='Invalid'>\n                <TextArea value={this.props.config.urdf} defaultValue={this.props.config.urdf} rows={10} onChange={this.props.updateUrdf}/>\n              </Badge.Ribbon>\n            )\n          }\n\n        </Modal>\n      </>\n    )\n  }\n\n}\n\nexport default Basics\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Behavior.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/SimpleTFClient.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Detail.js",["108","109","110"],"import React from 'react';\nimport { Drawer } from 'antd';\nimport JointSpec from './JointSpec';\n\nclass Detail extends React.Component {\n\n  getTitle = () => {\n    if (this.props.meta.selected) {\n      switch (this.props.meta.selected.type) {\n        case 'starting_config':\n          return 'Specify Starting State'\n        case 'collision_state':\n          return 'Specify Collision State'\n        case 'objective':\n          return 'Specify Behavior'\n        default:\n          return 'NULL'\n      }\n    } else {\n      return 'NULL'\n    }\n\n  }\n\n  deselect = () => {\n    this.props.onUpdate({directive:'update',meta:{selected:null}})\n  }\n\n  onUpdate = (values) => {\n    if (this.props.meta.selected) {\n      switch (this.props.meta.selected.type) {\n        case 'starting_config':\n          this.props.onUpdate({directive:'update',config:{starting_config:values},meta:{displayed_state:values}})\n        case 'collision_state':\n          let states = [...this.props.config.states];\n          states[this.props.meta.selected.idx] = values;\n          this.props.onUpdate({directive:'update',config:{states:states},meta:{displayed_state:values}})\n        case 'objective':\n\n        default:\n\n      }\n    }\n  }\n\n  getContents = () => {\n    if (this.props.meta.selected) {\n      switch (this.props.meta.selected.type) {\n        case 'starting_config':\n          return <JointSpec joints={this.props.config.starting_config}\n                            names={this.props.config.joint_ordering}\n                            limits={this.props.config.joint_limits}\n                            onUpdate={this.onUpdate}/>\n        case 'collision_state':\n          console.log(this.props.config.joint_limits);\n          return <JointSpec joints={this.props.config.states[this.props.meta.selected.idx]}\n                            names={this.props.config.joint_ordering}\n                            limits={this.props.config.joint_limits}\n                            onUpdate={this.onUpdate}/>\n        case 'objective':\n          return 'Specify Behavior'\n        default:\n          return 'NULL'\n      }\n    } else {\n      return 'NULL'\n    }\n  }\n\n\n  render() {\n    return (\n      <Drawer\n        title={this.getTitle()}\n        placement=\"right\"\n        closable={true}\n        width='50%'\n        onClose={this.deselect}\n        visible={this.props.meta.selected !== null}\n        getContainer={false}\n        style={{ position: 'absolute' }}\n      >\n        {this.getContents()}\n      </Drawer>\n    )\n  }\n\n}\n\nexport default Detail\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/JointSpec.js",[],["111","112"],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/Default.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":24},{"ruleId":"117","severity":1,"message":"121","line":2,"column":26,"nodeType":"119","messageId":"120","endLine":2,"endColumn":32},{"ruleId":"117","severity":1,"message":"122","line":20,"column":46,"nodeType":"119","messageId":"120","endLine":20,"endColumn":55},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},{"ruleId":"117","severity":1,"message":"125","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"126","line":2,"column":16,"nodeType":"119","messageId":"120","endLine":2,"endColumn":22},{"ruleId":"117","severity":1,"message":"127","line":49,"column":20,"nodeType":"119","messageId":"120","endLine":49,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":34,"column":9,"nodeType":"130","messageId":"131","endLine":37,"endColumn":105},{"ruleId":"128","severity":1,"message":"129","line":38,"column":9,"nodeType":"130","messageId":"131","endLine":38,"endColumn":26},{"ruleId":"128","severity":1,"message":"132","line":40,"column":9,"nodeType":"130","messageId":"133","endLine":40,"endColumn":17},{"ruleId":"113","replacedBy":"134"},{"ruleId":"115","replacedBy":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'connected' is assigned a value but never used.",["136"],["137"],"'Form' is defined but never used.","'Slider' is defined but never used.","'value' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default",["136"],["137"],"no-global-assign","no-unsafe-negation"]