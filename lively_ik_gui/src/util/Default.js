
const defaultConfig = {
  axis_types:[],
  fixed_joints:[],
  base_link_motion_bounds:[[0,0],[0,0],[0,0]],
  static_environment:{
    cuboids:[],
    spheres:[],
    pcs:[]
  },
  fixed_frame:'base_link',
  modes:[{name:'default',weights:[1.0,1.0,0.1,2.0,5.0]}],
  goals:[{name:'default',values:[{},{},{},{},{}]}],
  joint_limits:[],
  joint_names:[],
  joint_ordering:[],
  joint_types:[],
  mode_control:'absolute',
  mode_environment:'ECAA',
  nn_jointpoint:[],
  nn_main:[],
  objectives:[{tag: 'Minimize Velocity', variant: 'min_velocity', indices: []},
              {tag: 'Minimize Acceleration', variant: 'min_acceleration', indices: []},
              {tag: 'Minimize Jerk', variant: 'min_jerk', indices: []},
              {tag: 'Joint Limits', variant: 'joint_limits', indices: []},
              {tag: 'Self-Collision', variant: 'nn_collision', indices: []}],
  states:[],
  robot_link_radius:0.05,
  rot_offsets:[],
  starting_config:[],
  urdf:'<?xml version="1.0" ?><robot name="default" xmlns:xacro="http://www.ros.org/wiki/xacro"><link name="base_link"/><joint name="default_joint" type="fixed"><parent link="base_link" /><child link="default_link" /><origin xyz="0 0 0" rpy="0 0 0" /></joint><link name="default_link"/></robot>',
  velocity_limits:[],
  disp_offsets:[],
  displacements:[]
}

const defaultMeta = {
  valid_urdf: false,
  valid_robot: false,
  valid_nn: false,
  valid_config: false,
  valid_solver: false,
  nn_main_utd: false,
  nn_jointpoint_utd: false,
  displayed_state:[],
  highlights:[],
  control:'manual',
  show_link_collision:false,
  nn_progress:0,
  joint_poses:[],
  links: [],
  dynamic_joints: [],
  fixed_joints: [],
  selected:null,
  updating:false,
  active_goals:0,
  active_mode:0,
  target_weights:[],
  target_goals:[]
}

const defaultObjectives = {
  joint_limits:{tag: 'Joint Limits', variant: 'joint_limits', indices: []},
  nn_collision:{tag: 'Self-Collision', variant: 'nn_collision', indices: []},
  env_collision:{tag: 'Dynamic Collision', variant: 'env_collision', indices: []},
  min_velocity:{tag: 'Minimize Velocity', variant: 'min_velocity', indices: []},
  min_acceleration:{tag: 'Minimize Acceleration', variant: 'min_acceleration', indices: []},
  min_jerk:{tag: 'Minimize Jerk', variant: 'min_jerk', indices: []},
  position_match:{tag: 'EE Position Control', variant: 'position_match', indices: [0,0]},
  orientation_match:{tag: 'EE Rotation Control', variant: 'orientation_match', indices: [0,0]},
  position_mirroring:{tag: 'Mirror Arm Positions', variant: 'position_mirroring', indices: [0,0,0,0]},
  orientation_mirroring:{tag: 'Mirror Arm Orientations', variant: 'orientation_mirroring', indices: [0,0,0,0]},
  position_bounding:{tag: 'Arm Position Bounding', variant: 'position_bounding', indices: [0,0]},
  orientation_bounding:{tag: 'Arm Orientation Bounding', variant: 'orientation_bounding', indices: [0,0]},
  joint_mirroring:{tag: 'Mirror Joints', variant: 'joint_mirroring', indices: [0]},
  joint_match:{tag: 'Joint Control', variant: 'joint_match', indices: [0,0]},
  position_liveliness:{tag: 'Arm Position Liveliness', frequency:  5, shape: [0.15,0.15,0.15], variant: 'position_liveliness', indices: [0,0]},
  orientation_liveliness:{tag: 'Arm Rotation Liveliness', frequency:  5, shape: [0.15,0.15,0.15], variant: 'orientation_liveliness', indices: [0,0]},
  joint_liveliness:{tag: 'Joint Liveliness', frequency: 5, scale: 1.0, variant: 'joint_liveliness', indices: [0]},
  relative_motion_liveliness:{tag: 'Lively Extension', frequency: 5, scale: 1.0, variant: 'relative_motion_liveliness', indices: [0,0,0,0]},
  base_link_position_liveliness:{tag: 'Base Liveliness', frequency: 5, shape: [0.15,0.15,0.15], variant: 'base_link_position_liveliness', indices: []}
}

const defaultGoals = {
  joint_limits:{},
  nn_collision:{},
  env_collision:{},
  min_velocity:{},
  min_acceleration:{},
  min_jerk:{},
  position_match:{vector: [0.0,0.0,0.0]},
  orientation_match:{quaternion: [1.0,0.0,0.0,0.0]},
  position_mirroring:{},
  orientation_mirroring:{},
  position_bounding:{},
  orientation_bounding:{},
  joint_mirroring:{},
  joint_match:{scalar: 0},
  position_liveliness:{},
  orientation_liveliness:{},
  joint_liveliness:{},
  relative_motion_liveliness:{},
  base_link_position_liveliness:{}
}

const defaultWeights = {
  joint_limits:2.0,
  nn_collision:5.0,
  env_collision:5.0,
  min_velocity:1.0,
  min_acceleration:1.0,
  min_jerk:0.1,
  position_match:30.0,
  orientation_match:25.0,
  position_mirroring:50.0,
  orientation_mirroring:30.0,
  position_bounding:50.0,
  orientation_bounding:30.0,
  joint_mirroring:50.0,
  joint_match:20.0,
  position_liveliness:10.0,
  orientation_liveliness:10.0,
  joint_liveliness:10.0,
  relative_motion_liveliness:10.0,
  base_link_position_liveliness:10.0
}

const defaultObjectiveNames = {
  joint_limits:'Joint Limits',
  nn_collision:'Static Collision',
  env_collision:'Dynamic Collision',
  min_velocity:'Velocity Minimization',
  min_acceleration:'Acceleration Minimization',
  min_jerk:'Jerk Minimization',
  position_match:'Position Control',
  orientation_match:'Rotation Control',
  position_mirroring:'Position Mirroring',
  orientation_mirroring:'Rotation Mirroring',
  position_bounding:'Position Bounding',
  orientation_bounding:'Rotation Bounding',
  joint_mirroring:'Joint Mirroring',
  joint_match:'Joint Control',
  position_liveliness:'Position Liveliness',
  orientation_liveliness:'Rotation Liveliness',
  joint_liveliness:'Joint Liveliness',
  relative_motion_liveliness:'Relative Motion Liveliness',
  base_link_position_liveliness:'Root Liveliness'
}

export {defaultConfig, defaultMeta, defaultObjectives, defaultGoals, defaultWeights, defaultObjectiveNames}
